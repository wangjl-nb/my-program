let x:int = 100;
const y:int = x;

fn fib(x: int) -> int {
    if -x--3+4<=-1 {
        return 3/1;
    }else if x>1{
        return 2;
    }else{
        x=3;
    }
    if(x>=2){
        if x>=4{
            return 3;
        }
    }
    let result: int = fib(x - 1);
    result = result + fib(x - 2);
    return result;
}
fn fib2(x: int) -> void {
    fib(2);
    let result: int = fib(x - 1);
    result = result + fib(x - 2);
}


fn main() -> int {
    fib2(1);
    let i: int = 0;
    let j: int;
    j = getint();
    while i < j {
        putint(i);
        putchar(32);
        putint(fib(i));
        putln();
        i = i + 1;
        while j<10{
            i=i+1;
        }
    }
    return 0;
}
